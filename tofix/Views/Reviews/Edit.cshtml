@model tofix.Models.Review
@using tofix.Models

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Review</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(m => m.userID)
    @Html.HiddenFor(m => m.videoID)

    <div class="form-group">
        @Html.LabelFor(model => model.BodyText, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.BodyText, new { HtmlTextWriterAttribute = new { @class = "text-area", rows = "4" } })
            @Html.ValidationMessageFor(model => model.BodyText, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.ReactionEmojis, htmlAttributes: new { @class = "checkbox col-md-2" })
        <div class="container-fluid">
            @foreach (ReactionEmoji emoji in ViewBag.allEmojis)
            {
                <input class="emojiCheckbox" type="checkbox" name="ReactionEmojiIDs" id="ReactionEmojiIDs-@emoji.ID" />
                <label for="ReactionEmojiIDs-@emoji.ID" title="spaceSaver">@emoji.Reaction</label>
            }

            @Html.ValidationMessageFor(model => model.ReactionEmojis, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div>
        <p>It is suggested that if you want to edit your reactions to instead delete and recreate your comment<br /> 
        Editing reaction emojis is not fully functional yet</p>
    </div>


    @*<div class="form-group">
        @Html.LabelFor(model => model.videoID, "videoID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("videoID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.videoID, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div class="button small primary">
    @Html.ActionLink("Back to List", "Details", "Videos", new { id = Model.videoID }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var limit = 2
        $('input.emojiCheckbox').on('change', function (evt) {
            if ($(this).siblings(':checked').length >= limit) {
                this.checked = false;
            }
            if (this.checked) {
                //
                $("label[for=" + ($(this).attr("id")) + "]").addClass("checkboxbox")
            } else {
                $("label[for=" + ($(this).attr("id")) + "]").removeClass("checkboxbox")
            }
        })




    </script>
}
