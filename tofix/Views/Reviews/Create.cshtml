@model tofix.Models.ViewModels.CreateReviewViewModel
@using tofix.Models

@{
    ViewBag.Title = "Create";
}

<h2>New Review</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.userID)
    @Html.HiddenFor(m => m.videoID)

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BodyText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BodyText, new { HtmlTextWriterAttribute = new { @class = "text-area", rows="4" } })
                @Html.ValidationMessageFor(model => model.BodyText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReactionEmojis, htmlAttributes: new { @class = "checkbox col-md-2" })
            <div class="container-fluid">
                @foreach(ReactionEmoji emoji in ViewBag.allEmojis)
                {
                    <input class="emojiCheckbox" type="checkbox" name="ReactionEmojiIDs" id="ReactionEmojiIDs-@emoji.ID" value="@emoji.ID" />
                <label for="ReactionEmojiIDs-@emoji.ID" title="@emoji.Description">@emoji.Reaction</label>
                    @*@: @Html.CheckBoxFor(model => model.ReactionEmojiIDs, (MultiSelectList)ViewBag.allEmojis, new { @class = "form-control" })*@
                }

                @*@Html.CheckBoxFor(model => model.ReactionEmojiIDs, (MultiSelectList)ViewBag.allEmojis, new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.ReactionEmojis, "", new { @class = "text-danger" })
            </div>
        </div>

  

        @*<div class="form-group">
            @Html.LabelFor(model => model.userID, "userID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("userID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.videoID, "videoID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("videoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.videoID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="button small">
    @Html.ActionLink("Back to List", "Index",new {id=Model.videoID})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var limit = 2
        $('input.emojiCheckbox').on('change', function (evt) {
            if ($(this).siblings(':checked').length >= limit) {
                this.checked = false;
            }
            if (this.checked) {
                //
                $("label[for=" + ($(this).attr("id")) + "]").addClass("checkboxbox")
            } else {
                $("label[for=" + ($(this).attr("id")) + "]").removeClass("checkboxbox")
            }
        })




    </script>
}
