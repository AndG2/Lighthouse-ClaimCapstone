@model tofix.Models.ViewModels.CreateReviewViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.userID)
    @Html.HiddenFor(m=>m.videoID)

    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BodyText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BodyText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BodyText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReactionEmojis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="container-fluid">
                @Html.ListBoxFor(model => model.ReactionEmojiIDs, (MultiSelectList)ViewBag.allEmojis, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReactionEmojis, "", new { @class = "text-danger" })
            </div>
        </div>

  

        @*<div class="form-group">
            @Html.LabelFor(model => model.userID, "userID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("userID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.videoID, "videoID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("videoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.videoID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index",new {id=Model.videoID})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
